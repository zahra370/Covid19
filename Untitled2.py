{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "mount_file_id": "1vi9qV86ElNSqe179jBrhc4rWIKsSducc",
      "authorship_tag": "ABX9TyPrgcvs2LA2SuJFfxHML43C",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard",
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/zahra370/Covid19/blob/main/Untitled2.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install miscnn"
      ],
      "metadata": {
        "id": "V_8nETKayasy",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "751bf000-2ce7-4652-b040-b0a657c81601"
      },
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting miscnn\n",
            "  Downloading miscnn-1.4.0-py3-none-any.whl (161 kB)\n",
            "\u001b[K     |████████████████████████████████| 161 kB 25.7 MB/s \n",
            "\u001b[?25hCollecting pillow==8.3.2\n",
            "  Downloading Pillow-8.3.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.0 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.0 MB 54.7 MB/s \n",
            "\u001b[?25hCollecting numpy==1.19.2\n",
            "  Downloading numpy-1.19.2-cp37-cp37m-manylinux2010_x86_64.whl (14.5 MB)\n",
            "\u001b[K     |████████████████████████████████| 14.5 MB 59.3 MB/s \n",
            "\u001b[?25hCollecting tqdm==4.51.0\n",
            "  Downloading tqdm-4.51.0-py2.py3-none-any.whl (70 kB)\n",
            "\u001b[K     |████████████████████████████████| 70 kB 11.6 MB/s \n",
            "\u001b[?25hCollecting SimpleITK==2.0.2\n",
            "  Downloading SimpleITK-2.0.2-cp37-cp37m-manylinux2010_x86_64.whl (47.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 47.4 MB 1.7 MB/s \n",
            "\u001b[?25hCollecting scikit-image==0.18.2\n",
            "  Downloading scikit_image-0.18.2-cp37-cp37m-manylinux1_x86_64.whl (29.2 MB)\n",
            "\u001b[K     |████████████████████████████████| 29.2 MB 1.4 MB/s \n",
            "\u001b[?25hCollecting tensorflow==2.7.0\n",
            "  Downloading https://us-python.pkg.dev/colab-wheels/public/tensorflow/tensorflow-2.7.0%2Bzzzcolab20220506150900-cp37-cp37m-linux_x86_64.whl (665.5 MB)\n",
            "\u001b[K     |████████████████████████████████| 665.5 MB 23 kB/s \n",
            "\u001b[?25hCollecting nibabel>=3.1.0\n",
            "  Downloading nibabel-4.0.1-py3-none-any.whl (3.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 3.3 MB 53.9 MB/s \n",
            "\u001b[?25hCollecting batchgenerators==0.21\n",
            "  Downloading batchgenerators-0.21-py3-none-any.whl (74 kB)\n",
            "\u001b[K     |████████████████████████████████| 74 kB 4.6 MB/s \n",
            "\u001b[?25hCollecting pydicom==2.0.0\n",
            "  Downloading pydicom-2.0.0-py3-none-any.whl (35.4 MB)\n",
            "\u001b[K     |████████████████████████████████| 35.4 MB 1.2 MB/s \n",
            "\u001b[?25hCollecting matplotlib==3.3.1\n",
            "  Downloading matplotlib-3.3.1-cp37-cp37m-manylinux1_x86_64.whl (11.6 MB)\n",
            "\u001b[K     |████████████████████████████████| 11.6 MB 67.5 MB/s \n",
            "\u001b[?25hCollecting tensorflow-addons==0.15.0\n",
            "  Downloading tensorflow_addons-0.15.0-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.1 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.1 MB 26.1 MB/s \n",
            "\u001b[?25hRequirement already satisfied: pandas>=1.1.4 in /usr/local/lib/python3.7/dist-packages (from miscnn) (1.3.5)\n",
            "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from batchgenerators==0.21->miscnn) (1.0.2)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from batchgenerators==0.21->miscnn) (1.7.3)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from batchgenerators==0.21->miscnn) (0.16.0)\n",
            "Collecting unittest2\n",
            "  Downloading unittest2-1.1.0-py2.py3-none-any.whl (96 kB)\n",
            "\u001b[K     |████████████████████████████████| 96 kB 6.3 MB/s \n",
            "\u001b[?25hRequirement already satisfied: threadpoolctl in /usr/local/lib/python3.7/dist-packages (from batchgenerators==0.21->miscnn) (3.1.0)\n",
            "Requirement already satisfied: certifi>=2020.06.20 in /usr/local/lib/python3.7/dist-packages (from matplotlib==3.3.1->miscnn) (2022.6.15)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /usr/local/lib/python3.7/dist-packages (from matplotlib==3.3.1->miscnn) (3.0.9)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib==3.3.1->miscnn) (2.8.2)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib==3.3.1->miscnn) (0.11.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib==3.3.1->miscnn) (1.4.4)\n",
            "Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image==0.18.2->miscnn) (2.6.3)\n",
            "Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from scikit-image==0.18.2->miscnn) (1.3.0)\n",
            "Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image==0.18.2->miscnn) (2.9.0)\n",
            "Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.7/dist-packages (from scikit-image==0.18.2->miscnn) (2021.11.2)\n",
            "Requirement already satisfied: wheel<1.0,>=0.32.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (0.37.1)\n",
            "Requirement already satisfied: keras-preprocessing>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.1.2)\n",
            "Requirement already satisfied: tensorboard~=2.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (2.8.0)\n",
            "Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.14.1)\n",
            "Requirement already satisfied: absl-py>=0.4.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.2.0)\n",
            "Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.15.0)\n",
            "Requirement already satisfied: protobuf>=3.9.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (3.17.3)\n",
            "Collecting keras<2.8,>=2.7.0rc0\n",
            "  Downloading keras-2.7.0-py2.py3-none-any.whl (1.3 MB)\n",
            "\u001b[K     |████████████████████████████████| 1.3 MB 59.7 MB/s \n",
            "\u001b[?25hRequirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (4.1.1)\n",
            "Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (3.3.0)\n",
            "Collecting gast<0.5.0,>=0.2.1\n",
            "  Downloading gast-0.4.0-py3-none-any.whl (9.8 kB)\n",
            "Requirement already satisfied: flatbuffers<3.0,>=1.12 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (2.0)\n",
            "Requirement already satisfied: libclang>=9.0.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (14.0.6)\n",
            "Requirement already satisfied: h5py>=2.9.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (3.1.0)\n",
            "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.47.0)\n",
            "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.1.0)\n",
            "Collecting tensorflow-estimator<2.8,~=2.7.0rc0\n",
            "  Downloading tensorflow_estimator-2.7.0-py2.py3-none-any.whl (463 kB)\n",
            "\u001b[K     |████████████████████████████████| 463 kB 78.0 MB/s \n",
            "\u001b[?25hRequirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (1.6.3)\n",
            "Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (0.26.0)\n",
            "Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.7/dist-packages (from tensorflow==2.7.0->miscnn) (0.2.0)\n",
            "Requirement already satisfied: typeguard>=2.7 in /usr/local/lib/python3.7/dist-packages (from tensorflow-addons==0.15.0->miscnn) (2.7.1)\n",
            "Requirement already satisfied: cached-property in /usr/local/lib/python3.7/dist-packages (from h5py>=2.9.0->tensorflow==2.7.0->miscnn) (1.5.2)\n",
            "Requirement already satisfied: packaging>=17.0 in /usr/local/lib/python3.7/dist-packages (from nibabel>=3.1.0->miscnn) (21.3)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from nibabel>=3.1.0->miscnn) (57.4.0)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.1.4->miscnn) (2022.1)\n",
            "Requirement already satisfied: google-auth-oauthlib<0.5,>=0.4.1 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (0.4.6)\n",
            "Requirement already satisfied: tensorboard-plugin-wit>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (1.8.1)\n",
            "Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (1.35.0)\n",
            "Requirement already satisfied: tensorboard-data-server<0.7.0,>=0.6.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (0.6.1)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (3.4.1)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (2.23.0)\n",
            "Requirement already satisfied: werkzeug>=0.11.15 in /usr/local/lib/python3.7/dist-packages (from tensorboard~=2.6->tensorflow==2.7.0->miscnn) (1.0.1)\n",
            "Requirement already satisfied: cachetools<5.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (4.2.4)\n",
            "Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (0.2.8)\n",
            "Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.7/dist-packages (from google-auth<3,>=1.6.3->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (4.9)\n",
            "Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.7/dist-packages (from google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (1.3.1)\n",
            "Requirement already satisfied: importlib-metadata>=4.4 in /usr/local/lib/python3.7/dist-packages (from markdown>=2.6.8->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (4.12.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata>=4.4->markdown>=2.6.8->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (3.8.1)\n",
            "Requirement already satisfied: pyasn1<0.5.0,>=0.4.6 in /usr/local/lib/python3.7/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (0.4.8)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests<3,>=2.21.0->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (1.24.3)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<0.5,>=0.4.1->tensorboard~=2.6->tensorflow==2.7.0->miscnn) (3.2.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->batchgenerators==0.21->miscnn) (1.1.0)\n",
            "Collecting traceback2\n",
            "  Downloading traceback2-1.4.0-py2.py3-none-any.whl (16 kB)\n",
            "Collecting argparse\n",
            "  Downloading argparse-1.4.0-py2.py3-none-any.whl (23 kB)\n",
            "Collecting linecache2\n",
            "  Downloading linecache2-1.0.0-py2.py3-none-any.whl (12 kB)\n",
            "Installing collected packages: pillow, numpy, linecache2, traceback2, matplotlib, argparse, unittest2, tensorflow-estimator, scikit-image, keras, gast, tqdm, tensorflow-addons, tensorflow, SimpleITK, pydicom, nibabel, batchgenerators, miscnn\n",
            "  Attempting uninstall: pillow\n",
            "    Found existing installation: Pillow 7.1.2\n",
            "    Uninstalling Pillow-7.1.2:\n",
            "      Successfully uninstalled Pillow-7.1.2\n",
            "  Attempting uninstall: numpy\n",
            "    Found existing installation: numpy 1.21.6\n",
            "    Uninstalling numpy-1.21.6:\n",
            "      Successfully uninstalled numpy-1.21.6\n",
            "  Attempting uninstall: matplotlib\n",
            "    Found existing installation: matplotlib 3.2.2\n",
            "    Uninstalling matplotlib-3.2.2:\n",
            "      Successfully uninstalled matplotlib-3.2.2\n",
            "  Attempting uninstall: tensorflow-estimator\n",
            "    Found existing installation: tensorflow-estimator 2.8.0\n",
            "    Uninstalling tensorflow-estimator-2.8.0:\n",
            "      Successfully uninstalled tensorflow-estimator-2.8.0\n",
            "  Attempting uninstall: scikit-image\n",
            "    Found existing installation: scikit-image 0.18.3\n",
            "    Uninstalling scikit-image-0.18.3:\n",
            "      Successfully uninstalled scikit-image-0.18.3\n",
            "  Attempting uninstall: keras\n",
            "    Found existing installation: keras 2.8.0\n",
            "    Uninstalling keras-2.8.0:\n",
            "      Successfully uninstalled keras-2.8.0\n",
            "  Attempting uninstall: gast\n",
            "    Found existing installation: gast 0.5.3\n",
            "    Uninstalling gast-0.5.3:\n",
            "      Successfully uninstalled gast-0.5.3\n",
            "  Attempting uninstall: tqdm\n",
            "    Found existing installation: tqdm 4.64.0\n",
            "    Uninstalling tqdm-4.64.0:\n",
            "      Successfully uninstalled tqdm-4.64.0\n",
            "  Attempting uninstall: tensorflow\n",
            "    Found existing installation: tensorflow 2.8.2+zzzcolab20220719082949\n",
            "    Uninstalling tensorflow-2.8.2+zzzcolab20220719082949:\n",
            "      Successfully uninstalled tensorflow-2.8.2+zzzcolab20220719082949\n",
            "  Attempting uninstall: nibabel\n",
            "    Found existing installation: nibabel 3.0.2\n",
            "    Uninstalling nibabel-3.0.2:\n",
            "      Successfully uninstalled nibabel-3.0.2\n",
            "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n",
            "xarray-einstats 0.2.2 requires numpy>=1.21, but you have numpy 1.19.2 which is incompatible.\n",
            "torchvision 0.13.1+cu113 requires pillow!=8.3.*,>=5.3.0, but you have pillow 8.3.2 which is incompatible.\n",
            "cmdstanpy 1.0.4 requires numpy>=1.21, but you have numpy 1.19.2 which is incompatible.\u001b[0m\n",
            "Successfully installed SimpleITK-2.0.2 argparse-1.4.0 batchgenerators-0.21 gast-0.4.0 keras-2.7.0 linecache2-1.0.0 matplotlib-3.3.1 miscnn-1.4.0 nibabel-4.0.1 numpy-1.19.2 pillow-8.3.2 pydicom-2.0.0 scikit-image-0.18.2 tensorflow-2.7.0+zzzcolab20220506150900 tensorflow-addons-0.15.0 tensorflow-estimator-2.7.0 tqdm-4.51.0 traceback2-1.4.0 unittest2-1.1.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "PIL",
                  "argparse",
                  "matplotlib",
                  "mpl_toolkits",
                  "numpy"
                ]
              }
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "#-----------------------------------------------------#\n",
        "#                   Library imports                   #\n",
        "#-----------------------------------------------------#\n",
        "import tensorflow as tf\n",
        "from miscnn.data_loading.interfaces import NIFTI_interface\n",
        "from miscnn import Data_IO, Preprocessor, Data_Augmentation, Neural_Network\n",
        "from miscnn.processing.subfunctions import Normalization, Clipping, Resampling\n",
        "from miscnn.neural_network.architecture.unet.standard import Architecture\n",
        "from miscnn.neural_network.metrics import tversky_crossentropy, dice_soft, \\\n",
        "                                          dice_crossentropy, tversky_loss\n",
        "from miscnn.evaluation.cross_validation import cross_validation\n",
        "from tensorflow.keras.callbacks import ReduceLROnPlateau, TensorBoard, \\\n",
        "                                       EarlyStopping, CSVLogger, ModelCheckpoint\n",
        "from miscnn.evaluation.cross_validation import run_fold, load_disk2fold\n",
        "import argparse\n",
        "import os\n",
        "\n",
        "#-----------------------------------------------------#\n",
        "#      Tensorflow Configuration for GPU Cluster       #\n",
        "#-----------------------------------------------------#\n",
        "os.environ[\"CUDA_VISIBLE_DEVICES\"]=\"1\"\n",
        "\n",
        "#-----------------------------------------------------#\n",
        "#                      Argparser                      #\n",
        "#-----------------------------------------------------#\n",
        "parser = argparse.ArgumentParser(description=\"Automated COVID-19 Segmentation\")\n",
        "parser.add_argument(\"-f\", \"--fold\", help=\"Cross-validation fold. Range: [0:5]\",\n",
        "                    required=True, type=int, dest=\"fold\")\n",
        "args = parser.parse_args()\n",
        "fold = args.fold\n",
        "fold_subdir = os.path.join(\"evaluation\", \"fold_\" + str(fold))\n",
        "\n",
        "#-----------------------------------------------------#\n",
        "#               Setup of MIScnn Pipeline              #\n",
        "#-----------------------------------------------------#\n",
        "# Initialize Data IO Interface for NIfTI data\n",
        "## We are using 4 classes due to [background, lung_left, lung_right, covid-19]\n",
        "interface = NIFTI_interface(channels=1, classes=4)\n",
        "\n",
        "# Create Data IO object to load and write samples in the file structure\n",
        "data_io = Data_IO(interface, input_path=\"/content/drive/MyDrive/coviddataset_lung_inf\", delete_batchDir=False)\n",
        "\n",
        "# Access all available samples in our file structure\n",
        "sample_list = data_io.get_indiceslist()\n",
        "sample_list.sort()\n",
        "\n",
        "# Create and configure the Data Augmentation class\n",
        "data_aug = Data_Augmentation(cycles=1, scaling=True, rotations=True,\n",
        "                             elastic_deform=True, mirror=True,\n",
        "                             brightness=True, contrast=True, gamma=True,\n",
        "                             gaussian_noise=True)\n",
        "\n",
        "# Create a clipping Subfunction to the lung window of CTs (-1250 and 250)\n",
        "sf_clipping = Clipping(min=-1250, max=250)\n",
        "# Create a pixel value normalization Subfunction to scale between 0-255\n",
        "sf_normalize = Normalization(mode=\"grayscale\")\n",
        "# Create a resampling Subfunction to voxel spacing 1.58 x 1.58 x 2.70\n",
        "sf_resample = Resampling((1.58, 1.58, 2.70))\n",
        "# Create a pixel value normalization Subfunction for z-score scaling\n",
        "sf_zscore = Normalization(mode=\"z-score\")\n",
        "\n",
        "# Assemble Subfunction classes into a list\n",
        "sf = [sf_clipping, sf_normalize, sf_resample, sf_zscore]\n",
        "\n",
        "# Create and configure the Preprocessor class\n",
        "pp = Preprocessor(data_io, data_aug=data_aug, batch_size=2, subfunctions=sf,\n",
        "                  prepare_subfunctions=True, prepare_batches=False,\n",
        "                  analysis=\"patchwise-crop\", patch_shape=(160, 160, 80))\n",
        "# Adjust the patch overlap for predictions\n",
        "pp.patchwise_overlap = (80, 80, 30)\n",
        "\n",
        "# Initialize the Architecture\n",
        "unet_standard = Architecture(depth=4, activation=\"softmax\",\n",
        "                             batch_normalization=True)\n",
        "\n",
        "# Create the Neural Network model\n",
        "model = Neural_Network(preprocessor=pp, architecture=unet_standard,\n",
        "                       loss=tversky_crossentropy,\n",
        "                       metrics=[tversky_loss, dice_soft, dice_crossentropy],\n",
        "                       batch_queue_size=3, workers=3, learninig_rate=0.001)\n",
        "\n",
        "# Define Callbacks\n",
        "cb_lr = ReduceLROnPlateau(monitor='loss', factor=0.1, patience=15,\n",
        "                          verbose=1, mode='min', min_delta=0.0001, cooldown=1,\n",
        "                          min_lr=0.00001)\n",
        "cb_es = EarlyStopping(monitor=\"loss\", patience=100)\n",
        "cb_tb = TensorBoard(log_dir=os.path.join(fold_subdir, \"tensorboard\"),\n",
        "                    histogram_freq=0, write_graph=True, write_images=True)\n",
        "cb_cl = CSVLogger(os.path.join(fold_subdir, \"logs.csv\"), separator=',',\n",
        "                  append=True)\n",
        "cb_mc = ModelCheckpoint(os.path.join(fold_subdir, \"model.best.hdf5\"),\n",
        "                        monitor=\"loss\", verbose=1,\n",
        "                        save_best_only=True, mode=\"min\")\n",
        "\n",
        "#-----------------------------------------------------#\n",
        "#          Run Pipeline for provided CV Fold          #\n",
        "#-----------------------------------------------------#\n",
        "# Run pipeline for cross-validation fold\n",
        "run_fold(fold, model, epochs=1000, iterations=150, evaluation_path=\"evaluation\",\n",
        "         draw_figures=True, callbacks=[cb_lr, cb_es, cb_tb, cb_cl, cb_mc],\n",
        "         save_models=False)\n",
        "\n",
        "# Dump latest model to disk\n",
        "model.dump(os.path.join(fold_subdir, \"model.latest.hdf5\"))\n",
        "\n",
        "#-----------------------------------------------------#\n",
        "#           Inference for provided CV Fold            #\n",
        "#-----------------------------------------------------#\n",
        "# Load best model weights during fitting\n",
        "model.load(os.path.join(fold_subdir, \"model.best.hdf5\"))\n",
        "\n",
        "# Obtain training and validation data set\n",
        "training, validation = load_disk2fold(os.path.join(fold_subdir,\n",
        "                                                   \"sample_list.json\"))\n",
        "\n",
        "# Compute predictions\n",
        "model.predict(validation, return_output=False)"
      ],
      "metadata": {
        "id": "BTjeVBQV-jNh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "!git clone https://github.com/zahra370/Covid19.git"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LbGRXCj0_f43",
        "outputId": "1036e492-1b85-42ee-c54f-d0ecbdb8c83e"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "fatal: destination path 'Covid19' already exists and is not an empty directory.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!touch MISCnn.py"
      ],
      "metadata": {
        "id": "kEVl5vgGAR2s"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "eb9j1tN8EtQy"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}